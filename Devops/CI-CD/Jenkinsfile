pipeline {
    agent any
    
    environment { 
        registryCredential = 'harsha3330-dockerhub'
        buildTimestamp = new java.text.SimpleDateFormat('yyyyMMdd-HHmmss').format(new java.util.Date())
        dockerImage = "harsha3330/plivo:${env.plivoBranch}-${env.BUILD_NUMBER}-date-${buildTimestamp}"
        SONARQUBE_URL = 'http://localhost:9000' 
        SONARQUBE_TOKEN = credentials('sonar')
    }

    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Charts from Git') {
            steps {
                git branch: 'main', credentialsId: 'github', url: 'https://github.com/Harsha190202/Plivo.git'
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                dir('Backend') { 
                    script {
                        def scannerHome = tool 'Sonar Scanner' 
                        env.PATH = "${scannerHome}/bin:${env.PATH}"
                    }
                    sh '''
                        sonar-scanner \
                            -Dproject.settings=sonar-project.properties \
                            -Dsonar.host.url=${SONARQUBE_URL} \
                            -Dsonar.login=${SONARQUBE_TOKEN}
                    '''
                }
            }
        }

        stage("Docker Build and Push") {
            steps {
                dir('Backend'){
                    script {
                        sh "docker login"
                        sh "docker build -f Dockerfile -t backend ."
                        sh "docker tag backend:latest ${dockerImage}"
                        sh "docker push ${dockerImage}"
                    }
                }
            }
        }

        stage("TRIVY Image Scan") {
            steps {
                sh "trivy image ${dockerImage} > trivyimage.txt" 
                sh "docker rmi ${dockerImage}"
            }
        }

        stage("Deployment") {
            steps {
                script {
                    withCredentials([string(credentialsId: 'github-pat', variable: 'GITHUB_TOKEN')]) {
                        sh """
                        sed -i 's|image: .+*|image: ${dockerImage}|g' Devops/k8-manifests/plivo/values.yaml
                        git add Devops/k8-manifests/plivo/values.yaml
                        git commit -m "Jenkins image update"
                        git pull https://${GITHUB_TOKEN}@github.com/Harsha190202/EKS.git main
                        git push https://${GITHUB_TOKEN}@github.com/Harsha190202/EKS.git main
                        """
                    }
                }
            }
        }
    }
}
